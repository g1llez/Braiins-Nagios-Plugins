#!/bin/bash

# Get the current script path
scriptPath=$(dirname $BASH_SOURCE[0])

# Check if we have all required parameters
if [[ $# -lt 5 ]]; then
    echo "Usage: $0 <ip> <username> <password> <warning_threshold> <machine_type_id>"
    echo "Example: $0 192.168.1.100 root password 4000 1"
    exit 3
fi

# Power trigger
PowerWarning=$4
MachineTypeID=$5

Service="POWER"

# Authentification
auth=$(grpcurl -plaintext -v -d  '{"username": "'$2'", "password": "'$3'"}' $1:50051 'braiins.bos.v1.AuthenticationService/Login' 2>/dev/null)

# Check if we successfully authenticate
retVal=$?
if [[ $retVal -eq 0 ]]; then

   # Get the current toker
   token=$(echo -e "$auth" | grep 'authorization:' | awk '{print $2}')
   
   # Get the Performance info
   info=$(grpcurl -plaintext -H 'authorization:'$token'' $1:50051 'braiins.bos.v1.PerformanceService/GetTunerState' 2>/dev/null)
   
   # Extract the power data
   target=$(echo $info | jq '.powerTargetModeState.profile.target.watt' 2>/dev/null | tr -d '"')
   watt=$(echo $info | jq '.powerTargetModeState.profile.estimatedPowerConsumption.watt' 2>/dev/null | tr -d '"')
   
   # Replace null or empty values with "U" (Unknown)
   [[ "$target" == "null" || -z "$target" ]] && target="U"
   [[ "$watt" == "null" || -z "$watt" ]] && watt="U"
   
   if [[ $watt == *"ERROR"* ]]; then
      echo "$Service UNKNOWN - Error getting power information"
      retVal=3
   else
      # Return the informations
	  status="OK"
	  statusCode=0
	  
	  # Check if machine is down (power data is U)
	  if [[ "$watt" == "U" && "$target" == "U" ]]; then
	     status="CRITICAL"
		 statusCode=2
	     echo "$Service $status - Machine éteinte ou données indisponibles | watt=$watt target=$target machine_type_id=$MachineTypeID"
	  # Check power only if it's numeric (not "U")
	  elif [[ "$watt" != "U" && "$watt" =~ ^[0-9.]+$ ]]; then
	     if (( $(echo "$watt > $PowerWarning" | bc -l) )); then
	        status="WARNING"
		    statusCode=1
	     fi
	     echo "$Service $status - Power usage: $watt Watts, Target: $target Watts | watt=$watt target=$target machine_type_id=$MachineTypeID"
	  else
	     echo "$Service $status - Power usage: $watt Watts, Target: $target Watts | watt=$watt target=$target machine_type_id=$MachineTypeID"
	  fi
      retVal=$statusCode
   fi
   
else
   echo "$Service UNKNOWN - Authentification failed for user '$2'"
   retVal=3
fi
exit $retVal
